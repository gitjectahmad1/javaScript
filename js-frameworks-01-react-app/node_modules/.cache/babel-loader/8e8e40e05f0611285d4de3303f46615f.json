{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AhmadSumon\\\\Downloads\\\\js-frameworks-01-react-app\\\\src\\\\UI\\\\SelectedPlace.js\";\nimport React, { useEffect, useRef } from 'react';\nimport './SelectedPlace.css';\n\nconst SelectedPlace = props => {\n  const {\n    centerCoords,\n    fallbackText\n  } = props;\n  const mapEl = useRef();\n  useEffect(() => {\n    if (centerCoords) {\n      const map = new window.google.maps.Map(mapEl.current, {\n        center: centerCoords,\n        zoom: 16\n      });\n      new window.google.maps.Marker({\n        position: centerCoords,\n        map: map\n      });\n    }\n  }, [centerCoords]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    id: \"selected-place\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, !centerCoords && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 42\n    }\n  }, fallbackText)));\n};\n\nexport default SelectedPlace;","map":{"version":3,"sources":["C:/Users/AhmadSumon/Downloads/js-frameworks-01-react-app/src/UI/SelectedPlace.js"],"names":["React","useEffect","useRef","SelectedPlace","props","centerCoords","fallbackText","mapEl","map","window","google","maps","Map","current","center","zoom","Marker","position"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AAEA,OAAO,qBAAP;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAiCF,KAAvC;AACA,QAAMG,KAAK,GAAGL,MAAM,EAApB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,YAAJ,EAAkB;AAChB,YAAMG,GAAG,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GAAvB,CAA2BL,KAAK,CAACM,OAAjC,EAA0C;AACpDC,QAAAA,MAAM,EAAET,YAD4C;AAEpDU,QAAAA,IAAI,EAAE;AAF8C,OAA1C,CAAZ;AAKA,UAAIN,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBK,MAAvB,CAA8B;AAC5BC,QAAAA,QAAQ,EAAEZ,YADkB;AAE5BG,QAAAA,GAAG,EAAEA;AAFuB,OAA9B;AAID;AACF,GAZQ,EAYN,CAACH,YAAD,CAZM,CAAT;AAcA,sBACE;AAAS,IAAA,EAAE,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkB,CAACF,YAAD,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,YAAJ,CAAnC,CADF,CADF;AAKD,CAvBD;;AAyBA,eAAeH,aAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nimport './SelectedPlace.css';\n\nconst SelectedPlace = props => {\n  const { centerCoords, fallbackText } = props;\n  const mapEl = useRef();\n\n  useEffect(() => {\n    if (centerCoords) {\n      const map = new window.google.maps.Map(mapEl.current, {\n        center: centerCoords,\n        zoom: 16\n      });\n\n      new window.google.maps.Marker({\n        position: centerCoords,\n        map: map\n      });\n    }\n  }, [centerCoords]);\n\n  return (\n    <section id=\"selected-place\">\n      <div ref={mapEl}>{!centerCoords && <p>{fallbackText}</p>}</div>\n    </section>\n  );\n};\n\nexport default SelectedPlace;\n"]},"metadata":{},"sourceType":"module"}